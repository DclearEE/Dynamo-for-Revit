{"license":"","file_hash":null,"name":"Rhythm","version":"2018.1.17","description":"Built against Dynamo 1.3.2 and Revit 2017+. Rhythm is a set of useful nodes to help your Revit project maintain Rhythm with Dynamo. Rhythm is authored by John Pierson (@60secondrevit) of sixtysecondrevit.com. \r\n\r\nGitHub: https://github.com/sixtysecondrevit/RhythmForDynamo\r\n\r\n*Although these nodes are tested thoroughly we are not responsible for any adverse effects they may have on your file. Make sure you save before running anyone's nodes or graphs.  \r\n\r\nThis project was generated initially at DPS Design, (dpsdesign.org). ","group":"Breaking CAD","keywords":["text","override","list","remove","documentation","workset","select","dimension","curtainwall","open","document","copy","unopened","background"],"dependencies":[],"contents":"AdaptiveComponent.PlacementPoints - This node retrieves the adaptive components points., All Elements of Type in Document - All elements of given type in specified document. This works for unopened files and for linked documents., All Framing at Reference Level - Collects all of the structural framing at a specific reference level, All Pipes at Reference Level - This will collect all pipes by their reference level., All Upper - This converts the ase of selected items to UPPER. Inputs require booleans to enable for category., Arrowhead Assigner - This node assings the arrowhead type for all text and keynote tags. There is an input for ones you want to exclude., Ayuda.IsArchi-LabInstalled - This node determines if Archi-Lab is installed. Useful with a toggle., Ayuda.IsClockworkInstalled - This node determines if clockwork is installed. Useful with a toggle., Ayuda.IsSteamNodesInstalled - This node determines if steamnodes is installed. Useful with a toggle.;, Ayuda.ThisOrThat - This node is a toggle between two inputs., BasicFileInfo.SavedInVersion - This will supply the version that the revit model is saved in., CableTray.Space - This node will determine the space a cable tray's center point falls within., Collector.Areas - This is an area collector element that utilizes mostly OOTB nodes., Collector.DuctsBySystem - This collects all ducts in the project and organizes them by System Classification, Collector.ModelGroupByName - This will collect all instances of a model group by given name., Collector.OfExteriorWalls - This node will collect all exterior (function) walls., Collector.OfInteriorWalls - This node collects interior (function) walls,, Collector.OfLegendViews - This node will collect all legend views in the project., Collector.OfStructuralWalls - This will collect only structural walls., Collector.PipesBySystem - This collects all pipes in the project and organizes them by System Classification, Collector.PlacedRooms - This will collect placed rooms in current file., Dimension.IsOverridden - This will report if a dimension has been overridden. , Dimension.LeaderEndPosition - This will return the leader end postion as a point., Dimension.MultiSegmentMembers - This will output all of the members of a multi-segment dimension., Dimension.NumberOfSegments - This will return the number of segments a dimension has. If it is a single dimension, this will return zero., Dimension.Origin - This will return the dimension origin as a point. Only works for single segment dimensions., DImension.Properties - This will reports some of the available properties of a dimension., Dimension.TextPosition - This will return the postition of the text as a point., Dimension.UsesProjectSettings - This will determine if a dimension uses project settings., Dimension.ValueString - The displayed value shown for the dimension segment. , Document.SetStartingView - This will set the starting view for a given document. ONLY WORKS IN ONE DOCUMENT AT A TIME, DraftingView.CreateInDocument - This will create a new drafting view in the given document. ONLY WORKS FOR ONE DOCUMENT AT A TIME, Element.Category - This node will get the input element(s)' categories, Element.CopyFromViewToView - This will copy elements from view to view., Element.GetJoinedElements - This will obtain the elements joined to the input element., Element.OverrideCutColorInView - Overrides the elements cut color in the view., Element.OverrideCutLineweight - Overrides the cut lines of the elements, Element.OverrideProjectionFillColor - This node overrides the fill color of the element in view., Element.OverrideProjectionLineColor - This node overrides the projection line color with the input color value. Useful for annotation., Element.ParentFamily - This node retrieces the parent family name for each input element., Element.SetPinnedStatus - Will set the element to either pinned or not pinned. True is pinned, false is unpinned. For multiple elements use List.Map, Element.Type - This retrieves the element type of the given elements. (if available) Similar to others available but no python here., Geometry.SpaceEvenlyWithBuffer - This will take input geometry and space it out in the Y direction with a buffer between, Geometry.ToRevitType - This will convert designscript geometyr into Revit.DB types. Currently tested with curves, nurbs curves and solids., GetParameterValueByNameAsString - Returns paramter value as string. , Group.UngroupElements - This will ungroup the input groups and output their elements. Use with care!, InteriorElevation.GetCropRegion - This will obtain the crop region from an Interior Elevation View Type., Isolated Pick Model Elements(ordered) - Pick model elements in desired order of a desired category., Isolated Pick Model Elements - This allows a multiple selection of elements of specified category., List.AllIndicesOf - Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned. , List.ArchitecturalAlphabeticalSequence - This creates a list of characters. What's different is we typically exclude I's and O's from our characters so there is a toggle for this., List.GetItemIndices - This node searches the input list for the given string or number., List.RestoreList - This will restore the list to it's original indentation., List.ReturnItemsPreviousToIndex - This will take an index (or indices) and return the items previous to it. Useful for sums of all items previous., Mullion.SortByDirection - This will sort mullions of a host curtain wall by direction they are facing., OS.CurrentUser - This node retrieves the current user logged in., OS.CurrentUserAppData - This retrieves the current user's appdata location, Output.Clean - This will return a single value or list from one input., Pick Model Element - This offers a single selection of a model element. Created for Dynamo Player usage., Pick Model Elements - This node offers a pick method for selecting elements in Revit., PipeInsulation.Create - This will add insulation to the input pipes. Can only handle one type of insulation and size for now., PostableCommand.CloseHiddenWindows - This will close the hidden windows in your current Revit document., PostableCommand.Default3DView - This will set the active view as the default (little house) 3D view., PostableCommand.ReplicateWindow - Does what is says. Creates another instance of the same window you have open., RemoveListFromList - This node essentially \"subtracts\" the contents of List B from List A to produce a new list with the unique items., Rhythm.3DRoomTags - This node will generate 3D room tags for all rooms in the model. (RFA in extra folder in Dynamo download), Rhythm.3DSpaceTags - This will generate 3D space tags for all spaces in the project., Rhythm.BackupRFADeleter - This node will scan the contents of a driectory and delete backup RFA files that appear with a four digit backup number before the file extension. (eg. Family1.0001.rfa) This is deleting files so please use with caution!, Rhythm.DatePicker - This provides a popup date selector for the user., Rhythm.IntegerSlider - Provides an integer slider for the dynamo player. Has min, max and description., Rhythm.PercentGlazingByOrientation - This node was show at RTCNA2015 to optimize your workflows. It reports the window to wall % by direction the wall faces., Rhythm.RenumberGridsByCurve - This node will renumber grids in order of curve drawn through them. Select either letters or numbers. (Alphanumeric coming soon), Rhythm.RenumberRoomsByCurve - This node will renumber rooms along a curve path. This was developed through the guidance of WIlliam Wong at case. Considering WeWork bought Case I wanted this node to live somewhere., Rhythm.TextBoxInput - Provides a text box input for users. Allows for multiple strings if needed., Rhythm.Toggle - Toggle that offers two outputs. Created for Dynamo 0.8.1 because of changes to the \"IF\" node, Rhythm.WhatTheNode - This node will let you search dynamonodes.com for the most likely package a node is from. Helps fix \"red\" nodes when users do not have package installed., Rhythm.YesNoToggle - This provides a toggle to use for graphs with dynamo player. The user chooses if they would like to run the graph., Select Elements By Curve - This will select model elements in the current view in the order that a curve is drawn through them., Select Grids By Curve - This will select Revit grids by the input Revit curve,, Space.IsPointInside - This will test if a point falls within a space., Space.SetSpaceType - This node will set the space type for the input space., Space.GetSpaceType - This will retrieve the space type of the space as a string., SquareFeetDropper - This node drops square feet from the pulled area, String.CharacterAtIndex - Get's the character at a given index, String.ElementsModified - THis custom node reports the amount of elements in a list as a phrase., String.FlipReverse - This node flips the string and reverses it. (April Fools '15) Works for 0.8.0 only, added unicode support, String.IndicesOfCharacter - This node gets all the indices of a given character, String.IsUnicode - Determines if input string is a unicode character., String.RemoveAfterGivenCharacter - This will move all characters at and after the given character., String.RemovePriorToCharacter - This will remove all characters prior to the input character. Accepts strings., String.SpecifyDecimalPlaces - This node will take your inout string and number of decimal places to create a new simplified output., String.ToSentenceCase - This node will convert a single string of text to have capitalized sentences. If you need to use this over a list, use List.Map., String.ToTitle - Converts the given string to Title Case., TextElement.ToLower - This node converts a Revit text elemnt to upper directly., TextElement.ToTitle - This node converts a Revit text elemnt to upper directly., UI.ColorPicker - This node allows the user to choose a color via the Revit API color selection dialog. For Revit 2017 +, UI.FilePath - Provides a file path option for use with Dynamo Player., UI.UserMessage - This will display a user message once. Until it is either toggled or changed., Unicode.LRE - Start of left-to-right embedding Unicode Character, Unicode.LRM - Left-to-right mark unicode character, Unicode.RLE - Start of right-to-left embedding Unicode Character, Unicode.RLM - Right-to-left mark Unicode character, Unicode.ZWJ - Zero width joiner Unicode Character, Unicode.ZWNJ - Zero width non-joiner Unicode Character, Viewport.ViewName - This node gets the view name of viewports. There is an issue when \"title on sheet\" is used, so this fixes that., Wall.NorthSouthEastWest - This node determines which direction a wall is facing and groups them by the direction or direction they are closest to., Workset.Create - Creates a workset or worksets from input names.","engine_version":"1.3.2.2480","engine":"dynamo","engine_metadata":"","site_url":"sixtysecondrevit.com","repository_url":"https://github.com/sixtysecondrevit/RhythmForDynamo","contains_binaries":true,"node_libraries":["Rhythm, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null","RhythmUI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"]}