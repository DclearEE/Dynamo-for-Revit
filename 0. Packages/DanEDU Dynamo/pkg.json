{"license":"GPL-3.0 (This package is covered by the LICENSE in the extra folder)","file_hash":null,"name":"DanEDU Dynamo","version":"2018.301.5","description":"DanEDU is a collection of practical nodes. The package is designed to support logic, technical, and mathematical solutions. In particular, many solutions are implemented as recursive functions, which means that solutions can solve nD-list challenges. In addition, the package also contains solutions that can be used working with Revit families. Furthermore, solutions for external applications included in the BIM wheel are supported, which not necessarily are Autodesk products. These solutions include e.g. solutions for estimation and load bearing challenges.\r\n\r\n---\r\nHistory of DanEDU Dynamo:\r\n2018.0301.x    First version of Csharp script driven nodes, List.GetItemAtIndex node added.\r\n2018.0215.x    Major update of node names (names are simplified), 'Element.Delete' node and nodes for FEM-design added\r\n2018.0115.x    FamilyDocument.GetParameterByName node added.\r\n2018.0101.x    Version numbers changed, updates in help notes in nodes.\r\n2018.0101.x    The sys.path settings implemented in the individual py files where needed. 'File.NewProject' supports aditional inputs, please verify the node.\r\n\rVersioning: The major number indicates the Year. The Minor number indicates the Month and Day. The build number is an internal build number.\n\r\nSoftware environment: Built for Dynamo +1.3.0 and Revit +2017.\r\n\r\n---\r\nMore information: Contact @erfajo at https://forum.dynamobim.com, https://forum.dynamobim.com/u/erfajo","group":"DanEDU","keywords":["danedu","erfajo","logic","technical","mathematical","recursive","element","list","family","type","instance"],"dependencies":[{"name":"Dynamic CSharp Interpreter","version":"121.0.0"}],"contents":"Boolean.FaceFlipped|DanEDU - Determines if element is flipped. Input takes familyinstance, output return boolean (flipped or not), Boolean.Flipped|DanEDU - Determines if element is flipped. Input takes familyinstance, output return boolean (flipped or not), Boolean.HandFlipped|DanEDU - Determines if element is flipped. Input takes familyinstance, output return boolean (flipped or not), Csharp Script Reader|DanEDU - This node acts as the 'script' input to a 'CsharpScript.FromString' node.\r\nNOTE:\r\nThe Input file must be without file extension!, deprecated.BoolFlipped|DanEDU - This node is deprecated, please use\r\nBoolean.FaceFlipped and\r\nBoolean.HandFlipped, deprecated.ElemFlipped|DanEDU - This node is deprecated, please use\r\nElement.FaceFlipped and\r\nElement.HandFlipped, Directory.ContentsAll|DanEDU - Get the files in a directory or a directory and its subdirectories (use bool value for deepsearch). Does not include hidden or readonly files (and thereby system files). Use string for extension type or * for all filetypes!, Dynamo Settings Path|DanEDU - Get paths set in the DynamoSettings.xml, Element.ByCategory|DanEDU - Takes Categories as strings (in a list), return elements grouped by categories and the category list, Element.Delete|DanEDU - Delete elements, Element.FaceFlipped|DanEDU - Determines if element is flipped. Input takes familyinstance, output return two lists (flipped or not), Element.Flipped|DanEDU - Determines if element is flipped. Input takes familyinstance, output return two lists (flipped or not), Element.HandFlipped|DanEDU - Determines if element is flipped. Input takes familyinstance, output return two lists (flipped or not), Element.HasMaterialQuantities|DanEDU - Retrieve elements that has material quantities, return elements grouped by categories and the category list, Element.MaterialDensity|DanEDU - Get material density, return physical and thermal values in SI unit (kg/m3), Element.SetAnalyticalLocation|DanEDU - Set (structural) element analytical location, FamilyInstance.ByFamilyName|DanEDU - Obtain a collection of FamilyInstances loaded into the Revit Document and use them in the Dynamo graph, Family.AddSharedParameter|DanEDU - Add shared parameter by name in a family document. Please note that a default shared parameter file must be set in Revit, Family.CreateParameter|DanEDU - Create a new parameter by name in a family document., Family.GetFormulaByName|DanEDU - Get formula value by name in a family document, Family.GetParameterByName|DanEDU - Get parameter value by name in a family document, Family.LoadFamily|DanEDU - Load family document into project, existing families will be overwritten, and families is upgraded if needed, Family.RemoveFormula|DanEDU - Remove formula in parameter by name in a family document, Family.RemoveParameter|DanEDU - Remove parameter by name in a family document, Family.SetFormulaByName|DanEDU - Set formula value by name in a family document.\r\n\r\nIt is mandatory that 'value' input is string(s)\r\nThe accepted inputs are as following using 'Code Block'\r\nstring -->  \"\\\"string\\\"\"\r\nnumber -->  \"1\"\r\nformula -->  \"formula\", Family.SetParameterByName|DanEDU - Set parameter value by name in a family document, FEM-design.GetElementID|DanEDU - Get element id from FEM-design, FEM-design.GetReinforcement|DanEDU - Get reinforcement from FEM-design, FEM-design.SetLinearRelease|DanEDU - Write (set) linear release in FEM-design xml-file, FEM-design.SetStiffnessValue|DanEDU - Set stiffness value globally in FEM-design, File.LoadFamily|DanEDU - Load family by path, existing families will be overwritten, and families is upgraded if needed, File.NewProject|DanEDU - Create new project(s) based on a template. Takes also lists of new projects and templates of equal length., File.Rename|DanEDU - Rename files in a directory, takes two list of identical length. Existing file names must be exact names. Use string for extension type or * for all filetypes!, File.SaveFamily|DanEDU - Save family to path, Floor.SetAreaLoad|DanEDU - Set (structural) floor area load, List.Clean|DanEDU - Remove empty list, null and blank values\r\n- former named as RemoveNull, List.FilterByKey|DanEDU - Filter two list items based on common key values, List.GetItemAtIndex|DanEDU - Fetch an item from the given list that's located at the specified index (the full path), List.IndexOf|DanEDU - Returns the index (the full path) of the member in the list, List.Replace|DanEDU - Replace empty list, null and blank values\r\n- former named as ReplaceNull, List.ReplaceItemAtIndex|DanEDU - Replace an item from the given list that's located at the specified index (the full path), List.Sort|DanEDU - Sort a list using the built-in natural ordering (which is not natural sort order -> en.wikipedia.org/wiki/Natural_sort_order), List.Sort&GroupByKey|DanEDU - Sort items by reference level, List.SortNatural|DanEDU - Natural sort order is an ordering of elements in alphabetical order. Natural sort order has been promoted as being more human-friendly (natural) than the machine-oriented classical alphanumerical order (en.wikipedia.org/wiki/Natural_sort_order)., List.SummationByKey|DanEDU - Summation of values and group items into sub-lists based on their like key values, Object.Hashing|DanEDU - Input is transferred to output along with its hassing value., Python Script Reader|DanEDU - This node acts as the 'script' input to a 'Python Script From String' node.\r\nNOTE:\r\nThe Input file must be without file extension!, Sigma.Component|DanEDU - Creates list containing a Sigma Component, Sigma.ComponentByQuantity|DanEDU - Creates list containing a Sigma Component by Quantity, Sigma.WriteData|DanEDU - Writes data from Revit to Sigma (.sig) fileformat","engine_version":"1.3.2.2480","engine":"dynamo","engine_metadata":"","site_url":"","repository_url":"https://github.com/erfajo/DanEDU_Dynamo","contains_binaries":true,"node_libraries":[]}