<Workspace Version="1.3.2.2480" X="150.251863236542" Y="159.430190168976" zoom="1.14435986229647" ScaleFactor="1" Name="Element.Level" Description="Gets an element's level" ID="23a94b80-4bd0-436f-a1b1-f77654b4428c" Category="Clockwork.Revit.Elements.Element.Query">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="87f38510-c9e9-4c95-8119-d85d995c924f" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="154.390045109355" y="159.981574747691" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="element" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="8f1bdb12-4403-406c-90d6-7cefe95d4b2d" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="566.390045109355" y="159.981574747691" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="level" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="d9ae8178-d1ff-4cd0-95b3-f733ccb20bc8" type="PythonNodeModels.PythonNode" nickname="Python Script" x="342.390045109355" y="159.981574747692" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

def GetLevel(item):
	val = None
	if hasattr(item, "LevelId"): 
		val = item.Document.GetElement(item.LevelId)
		if val: return val
	if hasattr(item, "Level"):
		val = item.Level
		if val: return val
	if hasattr(item, "GenLevel"):
		val = item.GenLevel
		if val: return val
	if not val:
		try: return item.Document.GetElement(item.get_Parameter(BuiltInParameter.INSTANCE_REFERENCE_LEVEL_PARAM).AsElementId())
		except: 
			try: return item.Document.GetElement(item.get_Parameter(BuiltInParameter.INSTANCE_SCHEDULE_ONLY_LEVEL_PARAM).AsElementId())
			except: return None

items = UnwrapElement(IN[0])

if isinstance(IN[0], list): OUT = [GetLevel(x) for x in items]
else: OUT = GetLevel(items)</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="87f38510-c9e9-4c95-8119-d85d995c924f" start_index="0" end="d9ae8178-d1ff-4cd0-95b3-f733ccb20bc8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d9ae8178-d1ff-4cd0-95b3-f733ccb20bc8" start_index="0" end="8f1bdb12-4403-406c-90d6-7cefe95d4b2d" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Hintergrundvorschau" eyeX="4600.88671875" eyeY="3810.54272460938" eyeZ="19739.896484375" lookX="3718.79711914063" lookY="-4028.69677734375" lookZ="-17974.185546875" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>