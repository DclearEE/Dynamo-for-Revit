<Workspace Version="1.3.2.2480" X="-549.212285553602" Y="99.1330756416191" zoom="1.63300432118221" ScaleFactor="1" Name="Wall.Orientation" Description="Gets the orientation of a given wall instance (normal of the exterior face of the wall). Will *not* work for walls hosted on mass faces or in-place walls." ID="8cfc6f31-34cf-4c99-be21-5af290dbe7b7" Category="Clockwork.Revit.Elements.Wall.Query">
  <NamespaceResolutionMap>
    <ClassMap partialName="Wall" resolvedName="Revit.Elements.Wall" assemblyName="RevitNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7d675e6f-ff05-4b4b-89eb-be20b050e79e" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="244.703555809089" y="56.8670406525547" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="wall : Wall" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="4fc294fd-e0ca-4307-8144-597c5fd12d37" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="689.703555809089" y="56.8670406525547" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Normal" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <PythonNodeModels.PythonNode guid="9822dc6d-4666-4600-8871-44414d2727a2" type="PythonNodeModels.PythonNode" nickname="Python Script" x="465.703555809089" y="56.8670406525547" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

def WallOrientation(wall):
	loc = wall.Location
	flipped = False
	if hasattr(loc, "Curve"):
		lcurve = loc.Curve
		if hasattr(wall, "Flipped"): flipped = wall.Flipped
		if str(type(lcurve)) == "Autodesk.Revit.DB.Line":
			if flipped: return wall.Orientation.ToVector().Reverse()
			else: return wall.Orientation.ToVector()
		else:
			direction = (lcurve.GetEndPoint(1) - lcurve.GetEndPoint(0)).Normalize()
			if flipped: return XYZ.BasisZ.CrossProduct(direction).ToVector().Reverse()
			else: return XYZ.BasisZ.CrossProduct(direction).ToVector()
	else: return None

walls = UnwrapElement(IN[0])

if isinstance(IN[0], list): OUT = [WallOrientation(x) for x in walls]
else: OUT = WallOrientation(walls)</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7d675e6f-ff05-4b4b-89eb-be20b050e79e" start_index="0" end="9822dc6d-4666-4600-8871-44414d2727a2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9822dc6d-4666-4600-8871-44414d2727a2" start_index="0" end="4fc294fd-e0ca-4307-8144-597c5fd12d37" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Hintergrundvorschau" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>