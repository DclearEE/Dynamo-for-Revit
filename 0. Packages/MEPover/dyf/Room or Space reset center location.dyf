<Workspace Version="1.2.0.2831" X="-87" Y="-34" zoom="1" Name="Room or Space reset center location" Description="This node will attempt to reset the location of the room or space to its default center location" ID="3a662c03-2a28-4b54-b990-480d8fc4b59a" Category="MEPover.Revit.RoomsAndSpaces">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="76010874-c869-4ba1-a521-3680b66634ed" type="PythonNodeModels.PythonNode" nickname="Python Script" x="303" y="232" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

if isinstance(IN[0],list):
	rooms = UnwrapElement(IN[0])
else:
	rooms = [UnwrapElement(IN[0])]
	
listout = []
locations = []

for room in rooms:
	levelId = room.get_Parameter(BuiltInParameter.ROOM_LEVEL_ID).AsElementId()
	level = doc.GetElement(levelId)
	try:
		planTopology = doc.get_PlanTopology(level)
		for plancircuit in planTopology.Circuits:
			if room.GetType() == Architecture.Room:
				if plancircuit.IsRoomLocated == True:
					UvPoint = plancircuit.GetPointInside()
					point = XYZ(UvPoint.U,UvPoint.V,level.Elevation)
					if room.IsPointInRoom(point):
						break
			else:
				try:
					UvPoint = plancircuit.GetPointInside()
					point = XYZ(UvPoint.U,UvPoint.V,level.Elevation)
					if room.IsPointInSpace(point):
						break
				except:
					continue
		TransactionManager.Instance.EnsureInTransaction(doc)
		room.Location.Point = point
		TransactionManager.Instance.TransactionTaskDone()
		listout.append(room)
		locations.append(point.ToPoint())
	except:
		listout.append(None)
		locations.append(None)

OUT = listout, locations</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="c72506f4-d596-43fc-b4f1-d26f1cfffa0d" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="88" y="215" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Rooms/Spaces" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="5f36b6a0-f10e-4b56-a6ab-626d7566eaa8" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="502" y="173" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="x[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="d3a29b0c-9cb9-4d9e-a983-85159bd22a33" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="500" y="276" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="x[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="2c5b74ad-364f-45ae-9508-29150caeb01b" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="657" y="170" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Rooms/Spaces" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="71995454-75ee-46c0-a599-48c1fb828364" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="655" y="276" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Locations" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="76010874-c869-4ba1-a521-3680b66634ed" start_index="0" end="5f36b6a0-f10e-4b56-a6ab-626d7566eaa8" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="76010874-c869-4ba1-a521-3680b66634ed" start_index="0" end="d3a29b0c-9cb9-4d9e-a983-85159bd22a33" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c72506f4-d596-43fc-b4f1-d26f1cfffa0d" start_index="0" end="76010874-c869-4ba1-a521-3680b66634ed" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5f36b6a0-f10e-4b56-a6ab-626d7566eaa8" start_index="0" end="2c5b74ad-364f-45ae-9508-29150caeb01b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d3a29b0c-9cb9-4d9e-a983-85159bd22a33" start_index="0" end="71995454-75ee-46c0-a599-48c1fb828364" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>