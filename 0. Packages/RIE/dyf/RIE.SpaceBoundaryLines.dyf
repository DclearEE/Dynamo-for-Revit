<Workspace Version="1.3.2.2480" X="-14.6994465433645" Y="438.521026462911" zoom="2.37004060791358" ScaleFactor="1" Name="RIE.SpaceBoundaryLines" Description="Outputs Boundarylines of input Space elements" ID="98bf2bb4-fec4-45c3-87a9-eb9c403bbc34" Category="RIE.Geometry">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="8b9d7791-b2f6-4abe-9d2a-50367c3f9bcc" type="PythonNodeModels.PythonNode" nickname="Python Script" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('RevitAPI')
from Autodesk.Revit.DB import *
import Autodesk

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

def tolist(obj):
	if isinstance(obj, list):
		return UnwrapElement(obj)
	else:
		return [UnwrapElement(obj)]

items = tolist(IN[0])

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
if int(app.VersionNumber) &gt; 2017: fullVersion = app.SubVersionNumber
else: fullVersion = str(app.VersionNumber)

version = int(app.VersionNumber)



elementlist = list()
curvelist = list()

for item in items:
	doc = item.Document
	calculator = SpatialElementGeometryCalculator(doc)
	options = Autodesk.Revit.DB.SpatialElementBoundaryOptions()
	# get boundary location from area computation settings
	boundloc = Autodesk.Revit.DB.AreaVolumeSettings.GetAreaVolumeSettings(doc).GetSpatialElementBoundaryLocation(SpatialElementType.Space)
	options.SpatialElementBoundaryLocation = boundloc
	#method #1 - get boundary segments
	blist = list()
	clist = list()
	try:
		for boundarylist in item.GetBoundarySegments(options):
			for boundary in boundarylist:
				blist.append(doc.GetElement(boundary.ElementId))
				if version &gt; 2016:
					clist.append(boundary.GetCurve().ToProtoType())
				else:
					clist.append(boundary.Curve.ToProtoType())
	except:
		pass
	#method #2 - spatial element geometry calculator
	try:
		results = calculator.CalculateSpatialElementGeometry(item)
		for face in results.GetGeometry().Faces:
			for bface in results.GetBoundaryFaceInfo(face):
				blist.append(doc.GetElement(bface.SpatialBoundaryElement.HostElementId))
	except:
		pass	
	# write results to list
	elementlist.append(blist)
	curvelist.append(clist)
OUT = (items,curvelist)</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="828fc85b-a5ee-436e-85d0-bb6c529ecdb1" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="164" y="0.799999999999955" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Spaces" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="48578709-7b5a-41c4-bddf-45d115ea0fde" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="510.6" y="-22.4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Spaces" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="d165fc5c-36b3-4a9c-98da-1a8594057271" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="513.8" y="43.2" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Curves" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="f29cc7f7-6537-43ec-abdd-239e5683fc98" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="380" y="-0.399999999999977" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="seq[0];&#xA;seq[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="8b9d7791-b2f6-4abe-9d2a-50367c3f9bcc" start_index="0" end="f29cc7f7-6537-43ec-abdd-239e5683fc98" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="828fc85b-a5ee-436e-85d0-bb6c529ecdb1" start_index="0" end="8b9d7791-b2f6-4abe-9d2a-50367c3f9bcc" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f29cc7f7-6537-43ec-abdd-239e5683fc98" start_index="0" end="48578709-7b5a-41c4-bddf-45d115ea0fde" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f29cc7f7-6537-43ec-abdd-239e5683fc98" start_index="1" end="d165fc5c-36b3-4a9c-98da-1a8594057271" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="76342.7167507474" eyeY="50588.8123291852" eyeZ="-14950.5503741966" lookX="3399.78324925265" lookY="-33088.8123291852" lookZ="-21736.9476726784" upX="0.107343525908455" upY="0.719339800338651" upZ="-0.686314519075832" />
  </Cameras>
</Workspace>