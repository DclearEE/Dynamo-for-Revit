<Workspace Version="1.3.2.2480" X="-924.93144901981" Y="29.8521026517518" zoom="0.847618571998227" ScaleFactor="1" Name="RIE.Orient3DViewToSelectedFace" Description="Orients the active 3D view to the selected face. First select the element or link you want to select a reference face from, then select the face." ID="02bdaf9d-b886-4c91-bf21-f117364bf184" Category="RIE.Views">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="9fd29e3e-f8ed-4d1b-8096-160061cb1833" type="PythonNodeModels.PythonNode" nickname="Python Script" x="250" y="56.410312217028" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># Copyright(c) 2017, Dimitar Venkov
# @5devene, dimitar.ven@gmail.com
# www.badmonkeys.net

import clr

clr.AddReference("RevitAPIUI")
from  Autodesk.Revit.UI import *

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument
uidoc=DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import RevitLinkInstance, FamilyInstance

def output1(x):
	if len(x) == 1: return x[0]
	else : return x

sel1 = uidoc.Selection
ot1 = Selection.ObjectType.Element
ot2 = Selection.ObjectType.PointOnElement
li_ref = sel1.PickObject(ot1, "Select a link instance first.")
link1 = doc.GetElement(li_ref.ElementId)
if isinstance(link1, RevitLinkInstance):
	tf1 = link1.GetTotalTransform()
	face_ref = sel1.PickObject(ot2, "Pick a face.")
	linkDoc = link1.GetLinkDocument()
	el1 = linkDoc.GetElement(face_ref.LinkedElementId)
	face_ref2 = face_ref.CreateReferenceInLink()
	sf0 = el1.GetGeometryObjectFromReference(face_ref2)
	if isinstance(el1, FamilyInstance):
		tf1 *= el1.GetTotalTransform()
	sf1 = sf0.Convert(face_ref2, tf1.ToCoordinateSystem(True) )
	for s in sf1:	
		s.Tags.AddTag("RevitFaceReference", face_ref)
	OUT = output1(sf1), face_ref.GlobalPoint.ToPoint(True), link1
else:
	tf1 = link1.GetTotalTransform()
	face_ref = sel1.PickObject(ot2, "Pick a face.")
	el1 = link1
	if isinstance(el1, FamilyInstance):
		tf1 *= el1.GetTotalTransform()
	sf0 = link1.GetGeometryObjectFromReference(face_ref)
	sf1 = sf0.Convert(face_ref, tf1.ToCoordinateSystem(True))
	OUT = output1(sf1), face_ref.GlobalPoint.ToPoint(True), link1</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="90a702d4-05af-4d54-9028-a9c0d49aae97" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="399.42490439515" y="63.979034912336" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="a[0];&#xA;a[1];&#xA;a[2];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="c8e7a314-a467-4a71-993b-108a5f8738b3" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Surface.NormalAtPoint" x="576.01599573819" y="0" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Surface.NormalAtPoint@Autodesk.DesignScript.Geometry.Point">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="651df77c-2b4b-463c-b357-b213fd7b3ace" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Vector.ZAxis" x="687.3717983501" y="118.33094220126" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Vector.ZAxis" />
    <PythonNodeModels.PythonNode guid="d5bf5b60-c1da-4940-9623-c82eeb2637a3" type="PythonNodeModels.PythonNode" nickname="Element.RotationAngle" x="624.11998164815" y="206.451870986105" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#This script looks for the rotation angle of Revit elements if available.
#If location is a LocationPoint then the Rotation value is available.
#In case of a slanted column, the Location is a LocationCurve, which doesn't have a rotation value.
#Authored by Dieter Vermeulen, Autodesk, 2015
#http://revitbeyondbim.wordpress.com

import clr
import math

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

#Import RevitAPI
clr.AddReference('RevitAPI')
import Autodesk
#The inputs to this node will be stored as a list in the IN variables.
resRotation = []
strCol= IN[0]

#make unwrapped list of elements
element = UnwrapElement(strCol)
	
#get location and then rotation of element, if not not existing, then set rotation to null.
try:
	loc=element.Location
	resRotation.append(math.degrees(loc.Rotation)-180)
except:
	resRotation.append(-180)
	

#Assign your output to the OUT variable.
OUT=resRotation</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="497f20f5-c452-4666-b996-846b3d47ca73" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Vector.Rotate" x="838.68848606783" y="96.458234976291" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Vector.Rotate@Autodesk.DesignScript.Geometry.Vector,double">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="True" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="bf54531b-9eb3-461e-920b-472688e2b0db" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Vector.Reverse" x="1059.842367613" y="98.7944980678441" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="ProtoGeometry.dll" function="Autodesk.DesignScript.Geometry.Vector.Reverse">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <PythonNodeModels.PythonNode guid="fb5408e5-46a8-4de2-ba85-486b2f17c3c5" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1286.06204059988" y="105.14360054476" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

from System.Collections.Generic import *

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import ReferencePointArray

input = UnwrapElement(IN[0])
vector = input[0].ToRevitType()


doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application
ThisView = doc.ActiveView

TransactionManager.Instance.EnsureInTransaction(doc)
#apply lineweight override to elements in an input list

ThisView.OrientTo(vector)

# "End" the transaction
TransactionManager.Instance.TransactionTaskDone()
OUT = doc.ActiveView
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="effc2e86-313e-4b50-be98-2032f429fc76" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1448.68398308571" y="93.3767852226978" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="ActiveView" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="9fd29e3e-f8ed-4d1b-8096-160061cb1833" start_index="0" end="90a702d4-05af-4d54-9028-a9c0d49aae97" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="90a702d4-05af-4d54-9028-a9c0d49aae97" start_index="0" end="c8e7a314-a467-4a71-993b-108a5f8738b3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="90a702d4-05af-4d54-9028-a9c0d49aae97" start_index="1" end="c8e7a314-a467-4a71-993b-108a5f8738b3" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="90a702d4-05af-4d54-9028-a9c0d49aae97" start_index="2" end="d5bf5b60-c1da-4940-9623-c82eeb2637a3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="c8e7a314-a467-4a71-993b-108a5f8738b3" start_index="0" end="497f20f5-c452-4666-b996-846b3d47ca73" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="651df77c-2b4b-463c-b357-b213fd7b3ace" start_index="0" end="497f20f5-c452-4666-b996-846b3d47ca73" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d5bf5b60-c1da-4940-9623-c82eeb2637a3" start_index="0" end="497f20f5-c452-4666-b996-846b3d47ca73" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="497f20f5-c452-4666-b996-846b3d47ca73" start_index="0" end="bf54531b-9eb3-461e-920b-472688e2b0db" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bf54531b-9eb3-461e-920b-472688e2b0db" start_index="0" end="fb5408e5-46a8-4de2-ba85-486b2f17c3c5" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="fb5408e5-46a8-4de2-ba85-486b2f17c3c5" start_index="0" end="effc2e86-313e-4b50-be98-2032f429fc76" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
</Workspace>