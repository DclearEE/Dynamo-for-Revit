<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dynamo.AI</name>
    </assembly>
    <members>
        <member name="T:Dynamo.AI.Data.Matrix">
            <summary>
            Defines Matrix class
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Size">
            <summary>
            Returns the size of the matrix as rows and columns
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamo.AI.Data.Matrix.ColumnCount">
            <summary>
            Gets the number of columns.
            </summary>
        </member>
        <member name="P:Dynamo.AI.Data.Matrix.RowCount">
            <summary>
            Gets the number of rows.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.EnumerateColumns">
            <summary>
            Returns a list of columns
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.EnumerateRows">
            <summary>
            Returns a list of rows
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Abs">
            <summary>
            Computes the absolute value of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Acos">
            <summary>
            Computes the acos of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Asin">
            <summary>
            Computes the asin of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Atan">
            <summary>
            Computes the atan of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Ceiling">
            <summary>
            Computes the ceiling of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Cos">
            <summary>
            Computes the cos of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Cosh">
            <summary>
            Computes the cosh of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Exp">
            <summary>
            Computes the exponential of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Floor">
            <summary>
            Computes the floor of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Log">
            <summary>
            Computes the log of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Log10">
            <summary>
            Computes the log10 of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.DotDivide(Dynamo.AI.Data.Matrix,Dynamo.AI.Data.Matrix)">
            <summary>
            Performs elementwise/pointwise division of dividend with divisor matrices
            </summary>
            <param name="dividend"></param>
            <param name="divisor"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.DotHat(Dynamo.AI.Data.Matrix,System.Double)">
            <summary>
            Elementwise/pointwise raise the given matrix to a given exponent.
            </summary>
            <param name="matrix">The input matrix</param>
            <param name="exponent">The power exponent</param>
            <returns>New matrix</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.DotHat(Dynamo.AI.Data.Matrix,Dynamo.AI.Data.Matrix)">
            <summary>
            Elementwise/pointwise raise the given matrix to a given exponent.
            </summary>
            <param name="matrix">The input matrix</param>
            <param name="exponent">The power exponent matrix</param>
            <returns>New matrix</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.DotMultiply(Dynamo.AI.Data.Matrix,Dynamo.AI.Data.Matrix)">
            <summary>
            Elementwise/pointwise multiplication of the two given matrix.
            </summary>
            <param name="x">First matrix</param>
            <param name="y">Second matrix</param>
            <returns>The product matrix</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.DotRemainder(Dynamo.AI.Data.Matrix,Dynamo.AI.Data.Matrix)">
            <summary>
            Pointwise remainder (% operator), where the result has the sign of 
            the dividend, of the dividend matrix by divisor matrix.
            </summary>
            <param name="dividend">The numerator matrix to use</param>
            <param name="divisor">The denominator matrix to use</param>
            <returns>Remainder matrix</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Round">
            <summary>
            Computes the rounded value of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Sin">
            <summary>
            Computes the sin of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Sinh">
            <summary>
            Computes the sinh of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Sqrt">
            <summary>
            Computes the sqrt of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Tan">
            <summary>
            Computes the tan of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Tanh">
            <summary>
            Computes the tanh of a matrix pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Add(Dynamo.AI.Data.Matrix)">
            <summary>
            Adds another matrix to this matrix.
            </summary>
            <param name="other">The matrix to add to this matrix.</param>
            <returns>The result of the addition.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the two matrices don't have the same dimensions.</exception>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Add(System.Double)">
            <summary>
            Adds a scalar value to each element of the matrix.
            </summary>
            <param name="value">The scalar value to add.</param>
            <returns>The result of the addition.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Append(Dynamo.AI.Data.Matrix)">
            <summary>
            Concatenates this matrix with the given matrix.
            </summary>
            <param name="right">The matrix to concatenate.</param>
            <returns>The combined matrix.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Determinant">
            <summary>
            Computes the determinant of this matrix.
            </summary>
            <returns>The determinant of this matrix.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Diagonal">
            <summary>
            Returns the elements of the diagonal in a Vector.
            </summary>
            <returns>The elements of the diagonal.</returns>
            <remarks>For non-square matrices, the method returns Min(Rows, Columns)
            elements where i == j (i is the row index, and j is the column index).</remarks>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Divide(System.Double)">
            <summary>
            Divides each element of this matrix with a scalar.
            </summary>
            <param name="value">The scalar value to divide with.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.DivideByThis(System.Double)">
            <summary>
            Divides a scalar by each element of the matrix.
            </summary>
            <param name="value">The scalar to divide.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Multiply(Dynamo.AI.Data.Matrix)">
            <summary>
            Multiplies this matrix with another matrix and returns the result.
            </summary>
            <param name="other">The matrix to multiply with.</param>
            <returns>The result of the multiplication.</returns>
            <exception cref="T:System.ArgumentException">If this.Columns != other.Rows.</exception>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Multiply(Dynamo.AI.Data.Vector)">
            <summary>
            Multiplies this matrix by a vector and returns the result.
            </summary>
            <param name="rightSide">The vector to multiply with.</param>
            <returns>The result of the multiplication.</returns>
            <exception cref="T:System.ArgumentException">If this.ColumnCount != rightSide.Count.</exception>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Multiply(System.Double)">
            <summary>
            Multiplies each element of this matrix with a scalar.
            </summary>
            <param name="value">The scalar to multiply with.</param>
            <returns>The result of the multiplication.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ToArray">
            <summary>
            Returns this matrix as array of row arrays. The returned arrays will be independent
            from this matrix. A new memory block will be allocated for the arrays.</summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ToCSVFile(System.String)">
            <summary>
            Saves this Matrix to a given CSV file.
            </summary>
            <param name="filePath">The CSV file path</param>
            <returns></returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ElementAt(System.Int32,System.Int32)">
            <summary>
            Retrieves the requested element without range checking.
            </summary>
            <param name="row">The row index of the element.</param>
            <param name="column">The column index of the element.</param>
            <returns>The requested element.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Column(System.Int32)">
            <summary>
            Copies a column into a new Vector>.
            </summary>
            <param name="index">The column to copy.</param>
            <returns>A Vector containing the copied elements.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Row(System.Int32)">
            <summary>
            Copies a row into a new Vector>.
            </summary>
            <param name="index">The row to copy.</param>
            <returns>A Vector containing the copied elements.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Transpose">
            <summary>
            Returns the transpose of this matrix.
            </summary>
            <returns>The transpose of this matrix.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Inverse">
            <summary>
            Computes the inverse of this matrix.
            </summary>
            <returns>The inverse of this matrix.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Subtract(System.Double)">
            <summary>
            Subtracts a scalar value from each element of the matrix.
            </summary>
            <param name="value">The scalar value to subtract.</param>
            <returns>A new matrix containing the subtraction of this matrix and the scalar.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Subtract(Dynamo.AI.Data.Matrix)">
            <summary>
            Subtracts another matrix from this matrix.
            </summary>
            <param name="other">The matrix to subtract.</param>
            <returns>The result of the subtraction.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.SolveLinearEquation(Dynamo.AI.Data.Vector)">
            <summary>
            Solves a system of linear equations, Ax = y, with A QR factorized.
            </summary>
            <param name="y">The right hand side vector</param>
            <returns>The left hand side vector x</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.SubMatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a matrix that contains the values from the requested sub-matrix.
            </summary>
            <param name="rowIndex">The row to start copying from.</param>
            <param name="rowCount">The number of rows to copy. Must be positive.</param>
            <param name="columnIndex">The column to start copying from.</param>
            <param name="columnCount">The number of columns to copy. Must be positive.</param>
            <returns>The requested sub-matrix.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ShuffleRows">
            <summary>
                Shuffles the matrix by randomizing the order of its rows.
            </summary>
            <returns name="matrix">Randomized Matrix by rows.</returns>
            <search>random,randomize,shuffle,jitter,randomness</search>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to this instance.
            </summary>
            <param name="obj">The System.Object to compare with this instance.</param>
            <returns>true if the specified System.Object is equal to this instance; otherwise, false.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Equals(Dynamo.AI.Data.Matrix)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ToString">
            <summary>
            Gets the string representation.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.GetHashCode">
            <summary>
            Returns hash code
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Zeros(System.Int32,System.Int32)">
            <summary>
            Create a new matrix with the given number of rows and columns. All cells
            of the matrix will be initialized to zero. Zero-length matrices are not 
            supported.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Ones(System.Int32,System.Int32)">
            <summary>
            Create a new matrix with the given number of rows and columns. All cells
            of the matrix will be initialized to one. Zero-length matrices are not 
            supported. 
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ByValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Create a new matrix with the given number of rows and columns. All cells
            of the matrix will be initialized to the given value. Zero-length matrices 
            are not supported.
            </summary>
            <param name="rows">Number of rows</param>
            <param name="columns">Number of columns</param>
            <param name="value">The initial value for each cells.</param>
            <returns>A matrix initialized with given value</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Reshape(System.Int32,System.Int32,System.Double[])">
            <summary>
            Create a new dense matrix with the given number of rows and columns directly
            binding to a raw array. The array is assumed to be in column-major order (column
            by column) and is used directly without copying. Very efficient, but changes
            to the array and the matrix will affect each other.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Identity(System.Int32)">
            <summary>
            Create a new diagonal identity matrix with a one-diagonal.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Random(System.Int32,System.Int32)">
            <summary>
            Create a new dense matrix with values sampled from the standard distribution
            with a system random source.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.Random(System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a new dense matrix with values sampled from the standard distribution
            with a system random source.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ByDiagonalVector(Dynamo.AI.Data.Vector)">
            <summary>
            Create a new dense matrix with the diagonal as a copy of the given vector. This
            new matrix will be independent from the vector. A new memory block will be allocated
            for storing the matrix.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ByDiagonalVector(System.Double[])">
            <summary>
            Create a new square diagonal matrix directly binding to a raw array. The array
            is assumed to represent the diagonal values and is used directly without copying.
            Very efficient, but changes to the array and the matrix will affect each other.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ByColumns(System.Collections.Generic.IEnumerable{System.Double[]})">
            <summary>
            Create a new dense matrix as a copy of the given enumerable of columns.
                Each list in the master enumerable specifies a column. This new matrix
                will be independent from the enumerables. A new memory block will be allocated
                for storing the matrix.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ByColumns(System.Collections.Generic.IEnumerable{Dynamo.AI.Data.Vector})">
            <summary>
            Create a new dense matrix as a copy of the given column vectors. This new matrix
                will be independent from the vectors. A new memory block will be allocated for
                storing the matrix.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ByRows(System.Collections.Generic.IEnumerable{System.Double[]})">
            <summary>
            Create a new dense matrix of T as a copy of the given row arrays. This new matrix
                will be independent from the arrays. A new memory block will be allocated for
                storing the matrix.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ByRows(System.Collections.Generic.IEnumerable{Dynamo.AI.Data.Vector})">
            <summary>
            Create a new dense matrix as a copy of the given row vectors. This new matrix
            will be independent from the vectors. A new memory block will be allocated for
            storing the matrix.</summary>
        </member>
        <member name="M:Dynamo.AI.Data.Matrix.ReadFromCSV(System.String)">
            <summary>
            Reads a CSV file and creates a matrix
            </summary>
            <param name="filePath">The SCV file path</param>
            <returns>Matrix</returns>
        </member>
        <member name="T:Dynamo.AI.Data.Statistics">
            <summary>
            Statistics algorithms
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.Mean(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Evaluates the sample mean, an estimate of the population mean. Returns NaN if
                data is empty or if any entry is NaN.
            </summary>
            <param name="data">The data to calculate the mean of.</param>
            <returns>The mean of the sample.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.Mean(Dynamo.AI.Data.Vector)">
            <summary>
            Evaluates the sample mean, an estimate of the population mean. Returns NaN if
            data is empty or if any entry is NaN.
            </summary>
            <param name="data">The data to calculate the mean of.</param>
            <returns>The mean of the sample.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.Mean(Dynamo.AI.Data.Matrix)">
            <summary>
            Evaluates the sample mean of each column as a vector of means, an estimate of 
            the population mean. Returns NaN if data is empty or if any entry is NaN.
            </summary>
            <param name="data">The matrix data to calculate the mean of.</param>
            <returns>The mean cector of the matrix data.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Estimates the unbiased population standard deviation from the provided samples.
            On a dataset of size N will use an N-1 normalizer (Bessel's correction). Returns
            NaN if data has less than two entries or if any entry is NaN.
            </summary>
            <param name="samples">A subset of samples, sampled from the full population.</param>
            <returns>Standard deviation and mean of the samples</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.StandardDeviation(Dynamo.AI.Data.Vector)">
            <summary>
            Estimates the unbiased population standard deviation from the provided samples.
            On a dataset of size N will use an N-1 normalizer (Bessel's correction). Returns
            NaN if data has less than two entries or if any entry is NaN.
            </summary>
            <param name="data">A vector representing subset of samples, sampled 
            from the full population.</param>
            <returns>Standard deviation and mean of the samples</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.StandardDeviation(Dynamo.AI.Data.Matrix)">
            <summary>
            Estimates the unbiased population standard deviation from the provided samples.
            On a dataset of size N will use an N-1 normalizer (Bessel's correction). Returns
            NaN if data has less than two entries or if any entry is NaN.
            </summary>
            <param name="data">A matrix representing subset of samples, sampled 
            from the full population.</param>
            <returns>Standard deviation and mean of the samples</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.Normalize(Dynamo.AI.Data.Matrix,Dynamo.AI.Data.Vector,Dynamo.AI.Data.Vector)">
            <summary>
            Normalizes the given matrix using mean and standard deviation vector
            </summary>
            <param name="data">The input matrix for normalization</param>
            <param name="mean">The mean vector</param>
            <param name="sd">The standard deviation vector</param>
            <returns>Normalized matrix</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Statistics.Normalize(Dynamo.AI.Data.Vector,Dynamo.AI.Data.Vector,Dynamo.AI.Data.Vector)">
            <summary>
            Normalizes the given vector using mean and standard deviation vector.
            All vectors should be of the same size.
            </summary>
            <param name="data">The input vector for normalization</param>
            <param name="mean"></param>
            <param name="sd"></param>
            <returns></returns>
        </member>
        <member name="T:Dynamo.AI.Data.Vector">
            <summary>
            Represents a vector
            </summary>
        </member>
        <member name="P:Dynamo.AI.Data.Vector.Size">
            <summary>
            Gets the length or number of dimensions of this vector.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Abs">
            <summary>
            Computes the absolute value of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Acos">
            <summary>
            Computes the acos of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Asin">
            <summary>
            Computes the asin of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Atan">
            <summary>
            Computes the atan of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Ceiling">
            <summary>
            Computes the ceiling of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Cos">
            <summary>
            Computes the cos of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Cosh">
            <summary>
            Computes the cosh of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Exp">
            <summary>
            Computes the exponential of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Floor">
            <summary>
            Computes the floor of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Log">
            <summary>
            Computes the log of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Log10">
            <summary>
            Computes the log10 of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.DotDivide(Dynamo.AI.Data.Vector,Dynamo.AI.Data.Vector)">
            <summary>
            Computes elementwise/pointwise division of two vectors of same size
            </summary>
            <param name="dividend">The numerator</param>
            <param name="divisor">The denominator</param>
            <returns>Result vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.DotHat(Dynamo.AI.Data.Vector,System.Double)">
            <summary>
            Computes elementwise/pointwise raise the given vector to a given exponent.
            </summary>
            <param name="vector">The input vector</param>
            <param name="exponent">The power exponent</param>
            <returns>Result vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.DotHat(Dynamo.AI.Data.Vector,Dynamo.AI.Data.Vector)">
            <summary>
            Computes elementwise/pointwise raise the given vector to a given exponent.
            </summary>
            <param name="vector">The input vector</param>
            <param name="exponent">The power exponent</param>
            <returns>Result vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.DotMultiply(Dynamo.AI.Data.Vector,Dynamo.AI.Data.Vector)">
            <summary>
            Computes elementwise/pointwise multiplication of two given vectors of
            same size.
            </summary>
            <param name="x">First vector</param>
            <param name="y">Second vector</param>
            <returns>Result vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.DotPercent(Dynamo.AI.Data.Vector,Dynamo.AI.Data.Vector)">
            <summary>
            Pointwise remainder (% operator), where the result has the sign of 
            the dividend, of the dividend vector by divisor vector.
            </summary>
            <param name="dividend">The numerator</param>
            <param name="divisor">The denominator</param>
            <returns>Result vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Round">
            <summary>
            Computes the rounded value of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Sin">
            <summary>
            Computes the sin of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Sinh">
            <summary>
            Computes the sinh of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Sqrt">
            <summary>
            Computes the sqrt of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Tan">
            <summary>
            Computes the tan of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Tanh">
            <summary>
            Computes the tanh of a vector pointwise
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Add(System.Double)">
            <summary>
            Adds a scalar to each element of the vector.
            </summary>
            <param name="value">The scalar to add.</param>
            <returns>A new vector with the scalar added.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Add(Dynamo.AI.Data.Vector)">
            <summary>
            Adds another vector to this vector.
            </summary>
            <param name="other">The vector to add to this one.</param>
            <returns>A new vector containing the sum of both vectors.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.ElementAt(System.Int32)">
            <summary>
            Gets the value at the given index without range checking
            </summary>
            <param name="index">The index of the value to get or set.</param>
            <returns>The value of the vector at the given index.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Divide(System.Double)">
            <summary>
            Divides each element of the vector by a scalar.
            </summary>
            <param name="value">The scalar to divide with.</param>
            <returns>A new vector that is the division of the vector and the scalar.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.DivideByThis(System.Double)">
            <summary>
            Divides a scalar by each element of the vector.
            </summary>
            <param name="value">The scalar to divide.</param>
            <returns>A new vector that is the division of the vector and the scalar.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.DotProduct(Dynamo.AI.Data.Vector)">
            <summary>
            Computes the dot product between this vector and another vector.
            </summary>
            <param name="other">The other vector.</param>
            <returns>The sum of a[i]*b[i] for all i.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Enumerate">
            <summary>
            Returns an IEnumerable that can be used to iterate through all values of the
            vector.
            </summary>
            <returns>The enumerator will include all values, even if they are zero.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to this instance.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Equals(Dynamo.AI.Data.Vector)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Maximum">
            <summary>
            Returns the value of maximum element.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Minimum">
            <summary>
            Returns the value of the minimum element.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Multiply(System.Double)">
            <summary>
            Multiplies a scalar to each element of the vector.
            </summary>
            <param name="value">The scalar to multiply.</param>
            <returns>A new vector that is the multiplication of the vector and the scalar.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Negate">
            <summary>
            Returns a negated vector.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.OuterProduct(Dynamo.AI.Data.Vector)">
            <summary>
            Computes the outer product M[i,j] = u[i]*v[j] of this and another vector.
            </summary>
            <param name="other">The other vector</param>
            <returns>Result matrix</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Remainder(System.Double)">
            <summary>
            Computes the remainder (vector % divisor), where the result has the sign of the
            dividend, for each element of the vector for the given divisor.
            </summary>
            <param name="divisor">The scalar denominator to use.</param>
            <returns>A vector containing the result.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Subtract(System.Double)">
            <summary>
            Subtracts a scalar from each element of the vector.
            </summary>
            <param name="value">The scalar to subtract.</param>
            <returns>A new vector containing the subtraction of this vector and the scalar.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Subtract(Dynamo.AI.Data.Vector)">
            <summary>
            Subtracts another vector from this vector.
            </summary>
            <param name="other">The vector to subtract from this one.</param>
            <returns>A new vector containing the subtraction of the the two vectors.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.SubtractFrom(System.Double)">
            <summary>
            Subtracts each element of the vector from a scalar.
            </summary>
            <param name="value">The scalar to subtract from.</param>
            <returns>A new vector containing the subtraction of the scalar and this vector.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.SubVector(System.Int32,System.Int32)">
            <summary>
            Creates a vector containing specified elements.
            </summary>
            <param name="index">The first element to begin copying from.</param>
            <param name="count">The number of elements to copy.</param>
            <returns>A vector containing a copy of the specified elements.</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Shuffle">
            <summary>
                Shuffles the vector, randomizing the order of its items.
            </summary>
            <returns name="vector">Randomized vector.</returns>
            <search>random,randomize,shuffle,jitter,randomness</search>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Sum">
            <summary>
            Computes the sum of the vector's elements.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.SumMagnitudes">
            <summary>
            Computes the sum of the absolute value of the vector's elements.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.ToArray">
            <summary>
            Returns the data contained in the vector as an array. The returned array will
            be independent from this vector. A new memory block will be allocated for the
            array.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.ToColumnMatrix">
            <summary>
            Create a matrix based on this vector in column form (one single column).
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.ToRowMatrix">
            <summary>
            Create a matrix based on this vector in row form (one single row).
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.ToString">
            <summary>
            Gets string representation.
            </summary>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Ones(System.Int32)">
            <summary>
            Create a new vector and initialize each value using the provided value.
            </summary>
            <param name="size">Size of the vector</param>
            <returns>New Vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Zeros(System.Int32)">
            <summary>
            Create a new vector and initialize each value as zero.
            </summary>
            <param name="size">Size of the vector</param>
            <returns>New Vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.ByValues(System.Double[])">
            <summary>
            Create a new vector as a copy of the given list of values.
            </summary>
            <param name="values">List of values</param>
            <returns>New Vector</returns>
        </member>
        <member name="M:Dynamo.AI.Data.Vector.Random(System.Int32,System.Int32)">
            <summary>
            Create a new vector with values sampled from the standard distribution
            with a system random source.</summary>
            <param name="size">Size of the vector</param>
            <param name="seed">Seed parameter</param>
            <returns>New Vector</returns>
        </member>
    </members>
</doc>
